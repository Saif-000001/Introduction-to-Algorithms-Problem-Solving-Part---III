// Pseudocode: Flyed-Warshall

Input -> A weighted graph as an adjacency matrix
Output -> All pair shortest distance 


Tim complexity -> O(v^2) + O(v^3) -> O(v^3)
Space complexity -> 

- create a distance_matrix "d" where d[i][j] = x where there is a direct -> O(v^2)
 edge from node "i" to node "j" and the cost is "x"
- for all node "i" d[i][i] = 0
- for all nodes "i" & "j" where there isn't any direct edge from i -> j
     d[i][j] = INF


- for all node "k"
   - for all node "u"
      - for all node "v"
         - d[u][v] = min(d[u][v], d[u][k]+d[k][v]) -> O(v^3)

- output all pair shortest distance "d"
